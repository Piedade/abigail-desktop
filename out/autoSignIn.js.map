{"version":3,"file":"autoSignIn.js","sourceRoot":"","sources":["../src/autoSignIn.ts"],"names":[],"mappings":"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","sourcesContent":["declare class Notification {\n  constructor(title: string, options: any)\n}\n\n(function (): void {\n  \"use strict\"\n\n  const SERVICE_NAME = \"org.develar.onshape\"\n  const LOGIN_NAME = \"data\"\n\n  const keytar = require(\"keytar\")\n\n  let passwordToSave: Credentials = null\n  let foundFormElementTimerId: number = -1\n  let oldUrl: string = null\n\n  const ipcRenderer = require(\"electron\").ipcRenderer\n  ipcRenderer.on(\"maybeUrlChanged\", (event: any, newUrl: string) => {\n    if (oldUrl != newUrl) {\n      try {\n        urlChanged(oldUrl, window.location)\n      }\n      finally {\n        oldUrl = newUrl\n      }\n    }\n  })\n\n  ipcRenderer.on(\"notify\", (event: any, title: string, message: string) => {\n    new Notification(title, {\n      body: message\n    })\n  })\n\n  document.addEventListener(\"DOMContentLoaded\", () => {\n     checkLocationAndSignInIfNeed()\n   })\n\n  class Credentials {\n    constructor(public login: string, public password: string) {\n    }\n  }\n\n  function loadCredentials(): Credentials {\n    const data = keytar.getPassword(SERVICE_NAME, LOGIN_NAME)\n    if (isNotEmpty(data)) {\n      try {\n        var parsed = JSON.parse(data)\n        if (Array.isArray(parsed)) {\n          if (parsed.length == 2) {\n            return new Credentials(parsed[0], parsed[1])\n          }\n          else {\n            // don't sent \"parsed\" due to security reasons\n            ipcRenderer.send(\"log.error\", \"Incorrect credentials data, see keychain\")\n          }\n        }\n      }\n      catch (e) {\n        console.error(e)\n        ipcRenderer.send(\"log.error\", e)\n      }\n    }\n    return null\n  }\n\n  function getInputElement(name: string) {\n    return <HTMLInputElement>document.querySelector('input[name=\"' + name + '\"]');\n  }\n\n  function isNotEmpty(string: string) {\n    // yep, get used to strict Java&Kotlin and cannot see code like (foo)\n    return string != null && string.length != 0\n  }\n\n  function setValue(input: HTMLInputElement, value: string) {\n    input.value = value\n    // we must trigger \"change\" event otherwise form is not submitted on click emulate (it seems, because angular (used in Onshape) doesn't detect changes immediately)\n    input.dispatchEvent(new Event(\"change\", {\"bubbles\": true}))\n  }\n\n  function fillAndSubmit(formElement: HTMLFormElement) {\n    const credentials = loadCredentials()\n    if (credentials != null && isNotEmpty(credentials.login)) {\n      setValue(getInputElement(\"email\"), credentials.login)\n\n      if (isNotEmpty(credentials.password)) {\n        setValue(getInputElement(\"password\"), credentials.password);\n        (<HTMLButtonElement>document.querySelector('div.os-form-btn-container > button[type=\"submit\"')).click()\n        return\n      }\n    }\n\n    var superOnSubmit: any = formElement.onsubmit\n    formElement.onsubmit = event => {\n      passwordToSave = null\n      if (superOnSubmit != null) {\n        superOnSubmit(event)\n      }\n\n      let login = getInputElement(\"email\").value\n      let password = getInputElement(\"password\").value\n      if (isNotEmpty(login) && isNotEmpty(password)) {\n        passwordToSave = new Credentials(login, password)\n      }\n    }\n  }\n\n  function fillOrWait() {\n    let formElement = <HTMLFormElement>document.querySelector(\"form[name='osForm']\")\n    if (formElement != null) {\n      console.log(\"form element found\")\n      fillAndSubmit(formElement)\n    }\n    else {\n      console.log(\"form element not found, schedule\")\n      setTimeout(() => {\n        checkLocationAndSignInIfNeed()\n      })\n    }\n  }\n\n  function checkLocationAndSignInIfNeed() {\n    let location = window.location\n    if (location.host == \"cad.onshape.com\" && location.pathname == \"/signin\") {\n      fillOrWait()\n    }\n  }\n\n  function urlChanged(oldUrl: string, newLocation: Location) {\n    if (foundFormElementTimerId != -1) {\n      clearTimeout(foundFormElementTimerId)\n    }\n\n    if (passwordToSave != null) {\n      if (newLocation.host == \"cad.onshape.com\" && oldUrl.endsWith(\"/signin\") && newLocation.pathname != \"/signup/forgotpassword\") {\n        keytar.replacePassword(SERVICE_NAME, LOGIN_NAME, JSON.stringify([passwordToSave.login, passwordToSave.password]))\n      }\n      passwordToSave = null\n    }\n    else if (document.readyState != \"loading\") {\n      checkLocationAndSignInIfNeed()\n    }\n  }\n}())"]}