{"version":3,"file":"WindowManager.js","sourceRoot":"","sources":["../src/WindowManager.ts"],"names":[],"mappings":"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","sourcesContent":["import {app, BrowserWindow as BrowserWindowElectron, ipcMain} from \"electron\";\nimport {StateManager, WindowItem, DEFAULT_URL} from \"./StateManager\";\nimport * as path from \"path\";\nimport AppUpdater from \"./AppUpdater\";\nimport {WebContentsSignal, WindowEvent} from \"./electronEventSignals\";\nimport BrowserWindow = Electron.BrowserWindow\nimport BrowserWindowOptions = Electron.BrowserWindowOptions\n\nexport const WINDOW_NAVIGATED = \"windowNavigated\"\n\nexport default class WindowManager {\n  private stateManager = new StateManager()\n  private windows: Array<BrowserWindow> = []\n\n  constructor() {\n    app.on(\"window-all-closed\", () => {\n      // restore default set of windows\n      this.stateManager.restoreWindows()\n      // On OS X it is common for applications and their menu bar\n      // to stay active until the user quits explicitly with Cmd + Q\n      if (process.platform == 'darwin') {\n        // reopen initial window\n        this.openWindows()\n      }\n      else {\n        app.quit()\n      }\n    })\n  }\n\n  private static saveWindowState(window: BrowserWindow, descriptor: WindowItem): void {\n    if (window.isMaximized()) {\n      delete descriptor.width\n      delete descriptor.height\n      delete descriptor.x\n      delete descriptor.y\n    }\n    else {\n      const bounds = window.getBounds()\n      descriptor.width = bounds.width\n      descriptor.height = bounds.height\n      descriptor.x = bounds.x\n      descriptor.y = bounds.y\n    }\n  }\n\n  private registerWindowEventHandlers(window: BrowserWindow, descriptor: WindowItem): void {\n    window.on(\"close\", (event: WindowEvent) => {\n      const window = event.sender\n      WindowManager.saveWindowState(window, descriptor)\n      const url = window.webContents.getURL()\n      if (!isUrlInvalid(url)) {\n        descriptor.url = url\n      }\n      this.stateManager.save()\n    })\n    window.on(\"closed\", (event: WindowEvent) => {\n      const index = this.windows.indexOf(event.sender)\n      console.assert(index >= 0)\n      this.windows.splice(index, 1)\n    })\n\n    window.on(\"app-command\", (e: any, command: string) => {\n      // navigate the window back when the user hits their mouse back button\n      if (command === \"browser-backward\") {\n        if (window.webContents.canGoBack()) {\n          window.webContents.goBack()\n        }\n      }\n      else if (command === \"browser-forward\") {\n        if (window.webContents.canGoForward()) {\n          window.webContents.goForward()\n        }\n      }\n    })\n\n    const webContents = window.webContents\n    // cannot find way to listen url change in pure JS\n    new WebContentsSignal(webContents)\n      .navigated((event, url) => {\n        ipcMain.emit(WINDOW_NAVIGATED, event.sender, url)\n        webContents.send(\"maybeUrlChanged\", url)\n      })\n      .navigatedInPage((event, url) => {\n        ipcMain.emit(WINDOW_NAVIGATED, event.sender, url)\n        webContents.send(\"maybeUrlChanged\", url)\n      })\n  }\n\n  openWindows(): void {\n    let descriptors = this.stateManager.getWindows()\n    if (descriptors == null || descriptors.length === 0) {\n      this.stateManager.restoreWindows()\n      descriptors = this.stateManager.getWindows()\n    }\n\n    for (const descriptor of descriptors) {\n      if (isUrlInvalid(descriptor.url)) {\n        // was error on load\n        descriptor.url = DEFAULT_URL\n      }\n\n      const options: BrowserWindowOptions = {\n        // to avoid visible maximizing\n        show: false,\n        webPreferences: {\n          preload: path.join(__dirname, \"autoSignIn.js\"),\n          // fix jquery issue (https://github.com/atom/electron/issues/254), and in any case node integration is not required\n          nodeIntegration: false,\n        }\n      }\n\n      let isMaximized = true\n      if (descriptor.width != null && descriptor.height != null) {\n        options.width = descriptor.width\n        options.height = descriptor.height\n        isMaximized = false\n      }\n      if (descriptor.x != null && descriptor.y != null) {\n        options.x = descriptor.x\n        options.y = descriptor.y\n        isMaximized = false\n      }\n\n      const window = new BrowserWindowElectron(options)\n      if (isMaximized) {\n        window.maximize()\n      }\n      window.loadURL(descriptor.url)\n      window.show()\n      this.registerWindowEventHandlers(window, descriptor)\n      this.windows.push(window)\n    }\n\n    new AppUpdater(this.windows[0])\n  }\n\n  focusFirstWindow(): void {\n    if (this.windows.length > 0) {\n      const window = this.windows[0]\n      if (window.isMinimized()) {\n        window.restore()\n      }\n      window.focus()\n    }\n  }\n}\n\nfunction isUrlInvalid(url: string): boolean {\n  return url == null || url.length === 0 || url == \"about:blank\"\n}"]}